// // const c = require('./utils/pay/alipayUtil');
// // const fs = require('fs');
// // const crypto = require('crypto');
// //
// // const data = 'app_id=2016072300102708&biz_content={"subject":"广东联通30元500M全国当日生效当月有效4G流量包","out_trade_no":"20171206031051185","total_amount":"0.01","product_code":"QUICK_MSECURITY_PAY","passback_params":"6"}&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http://liuxin.tunnel.qydev.com/api/alipay/aliPayNotify&sign_type=RSA2&timestamp=2017-12-07 11:49:10&version=1.0';
// //
// //
// // function ss(){
// //     const key = fs.readFileSync('./utils/pay/private.key');
// //     let sign = crypto.createSign('RSA-SHA256');
// //     sign.update(data,"UTF8");
// //     sign = sign.sign(key, 'base64');
// //     return sign;
// // }
// //
// // function jie(sign){
// //     const key = fs.readFileSync('./utils/pay/public.key');
// //     let sign = crypto.createSign('RSA-SHA256');
// //     sign.update(sign, "UTF8");
// //     sign = sign.sign(key, 'base64');
// //     console.log(sign);
// // }
// //
// // var sign = ss();
// //
// // jie(sign);
//
// // console.log({} instanceof Object);
// const scenicDao = require('./dao/scenicDao');
// const data = [{
//     baiduData: {
//         longitude: "116.40752599999996",
//         latitude: "39.90403"
//     },
//     googleData: {
//         longitude: "116.40752599999996",
//         latitude: "39.90403"
//     },
//     placeCity: "北京",
//     placeCountry: "中国",
//     placeProvince: "北京",
//     scenicId: "1",
//     scenicName: "北京"
// }];
// // function b() {
//     scenicDao.addScenicProductInfo(data).then((res)=>{
//         console.log(res);
//     }).catch((err)=>{
//         console.log(err);
//     })
// // }
//
//
//


// /**
//  * @api {post} /api/scenic/productInfoList 按 ID 获取产品信息接口
//  * @apiGroup Scenic
//  * @apiName productInfoList
//  * @apiParam {String} productIds 产品 Id（多个以逗号隔开）
//  * @apiSuccess {String} totalPage 列表总页数
//  * @apiSuccess {String} productList 结果集合
//  * @apiSuccess {String} scenicNameList.place 城市名称
//  * @apiSuccess {String} 1 查询成功
//  * @apiError {String} 2 查询失败
//  * @apiError {String} 3 错误信息
//  * @apiError {String} 4 参数不齐
//  */
// router.post('/productInfoList', (req, res) => {
//     let data = req.body;
//     if (!data.productIds) {
//         res.send({code: 4, msg: "参数不齐"});
//         return;
//     }
//     logger.startLog();
//     scenicService.productInfoList(data).then(val => {
//         logger.endLog(val);
//         res.send(val);
//     }).catch(err => {
//         logger.endErrLog(err);
//         res.send(err);
//     });
// });
//
// /**
//  * @api {post} /api/scenic/goodInfoList 按 ID 获取商品信息接口
//  * @apiGroup Scenic
//  * @apiName goodInfoList
//  * @apiParam {String} goodsIds 商品 Id（多个以逗号隔开）
//  * @apiSuccess {String} totalPage 列表总页数
//  * @apiSuccess {String} productList 结果集合
//  * @apiSuccess {String} scenicNameList.place 城市名称
//  * @apiSuccess {String} 1 查询成功
//  * @apiError {String} 2 查询失败
//  * @apiError {String} 3 错误信息
//  * @apiError {String} 4 参数不齐
//  */
// router.post('/goodInfoList', (req, res) => {
//     let data = req.body;
//     if (!data.goodsIds) {
//         res.send({code: 4, msg: "参数不齐"});
//         return;
//     }
//     logger.startLog();
//     scenicService.goodInfoList(data).then(val => {
//         logger.endLog(val);
//         res.send(val);
//     }).catch(err => {
//         logger.endErrLog(err);
//         res.send(err);
//     });
// });
//
// /**
//  * @api {post} /api/scenic/goodPriceList 按 ID 获取价格库存接口
//  * @apiGroup Scenic
//  * @apiName goodPriceList
//  * @apiParam {String} goodsIds 商品 Id（多个以逗号隔开）
//  * @apiParam {String} beginDate 开始时间
//  * @apiParam {String} endDate 结束时间
//  * @apiSuccess {String} totalPage 列表总页数
//  * @apiSuccess {String} productList 结果集合
//  * @apiSuccess {String} scenicNameList.place 城市名称
//  * @apiSuccess {String} 1 查询成功
//  * @apiError {String} 2 查询失败
//  * @apiError {String} 3 错误信息
//  * @apiError {String} 4 参数不齐
//  */
// router.post('/goodPriceList', (req, res) => {
//     let data = req.body;
//     if (!data.goodsIds || !data.beginDate || !data.endDate) {
//         res.send({code: 4, msg: "参数不齐"});
//         return;
//     }
//     logger.startLog();
//     scenicService.goodPriceList(data).then(val => {
//         logger.endLog(val);
//         res.send(val);
//     }).catch(err => {
//         logger.endErrLog(err);
//         res.send(err);
//     });
// });
//
// /**
//  * @api {post} /api/scenic/scenicInfoList 按 ID 获取景区信息接口（测试暂不可用）
//  * @apiGroup Scenic
//  * @apiName scenicInfoList
//  * @apiParam {String} scenicId 景区 Id（多个以逗号隔开）
//  * @apiSuccess {String} totalPage 列表总页数
//  * @apiSuccess {String} productList 结果集合
//  * @apiSuccess {String} scenicNameList.place 城市名称
//  * @apiSuccess {String} 1 查询成功
//  * @apiError {String} 2 查询失败
//  * @apiError {String} 3 错误信息
//  * @apiError {String} 4 参数不齐
//  */
// router.post('/scenicInfoList', (req, res) => {
//     let data = req.body;
//     if (!data.scenicId) {
//         res.send({code: 4, msg: "参数不齐"});
//         return;
//     }
//     logger.startLog();
//     scenicService.scenicInfoList(data).then(val => {
//         logger.endLog(val);
//         res.send(val);
//     }).catch(err => {
//         logger.endErrLog(err);
//         res.send(err);
//     });
// });
// const moment = require("moment");
// let startDate = "20171215", startTime = "11:25", lastTime = "08:56";
// //开始时间
// let end_time = moment(startDate + startTime + ":00", "YYYYMMDDHH:mm:ss");
// let start_time = end_time.format("YYYY-MM-DD HH:mm:ss");
// lastTime = lastTime.split(':');
// //结束时间
// end_time = end_time.add('m', lastTime[1]).add('h', lastTime[0]).format("YYYY-MM-DD HH:mm:ss");
// console.log(start_time);
// console.log(end_time);


/**
 * 去除xml规范
 * @param param
 */
// const replaceXmlStandard = (param) => {
//     //<![CDATA[北京]]>
//     const reg = /\!\[CDATA\[.*|\\n*\]\]/;
//     //数组
//     if (param instanceof Array) {
//         let params = param;
//         params.forEach((item, i) => {
//             param[i] = replaceXmlStandard(item);
//         });
//     } else if (typeof param == 'object') {  //对象/JSON
//         for (let key in param) {
//             param[key] = replaceXmlStandard(param[key]);
//         }
//     } else if (typeof param == 'string') {    //字符串
//         if (reg.test(param)) {
//             param = param.substring(9, param.length - 3);
//         }
//     }
//     return param;
// };
// const text = ["<![CDATA[与爨龙颜碑、终南山、五峰山相毗邻]]>", "<![CDATA[曾拍摄过《三国演义》、《炎黄始祖》等多部影视作品]]>", "<![CDATA[座座沙峰或独矗，或相连，参差有致，远看成林，近看成峰]]>", "<![CDATA[沙林、自然景观奇、人文景观丰]]>"];
// console.log(replaceXmlStandard(text)).

// let str = `%B3%E4%D6%B5%3A%BB%F1%C8%A1%B3%E4%D6%B5%B2%CE%CA%FD%CA%A7%B0%DC%2C%CA%A7%B0%DC%D4%AD%D2%F2-%D6%B8%B6%A8IP%C9%CC%C6%B7%B2%BB%D6%A7%B3%D61Q%B1%D2%B3%E4%D6%B5%2C%D7%EE%C9%D92Q%B1%D2`;
// let result = require("urlencode").decode(str, 'GBK');
// console.log(result);


// const moment = require('moment');
// const c = moment(), t = moment('2018-1-15 16:40:0'), m = c.diff(t,"minutes"), h = parseInt(m / 60), m2 = m - (h * 60);
// console.log("时：", h);
// console.log("分：", m2);

// const server = require('./service/userService');
// server.getUserInfo('781a42d2b3b767ced4a6498db32b39b7c8499ae1').then((res)=>{
//     console.log(res);
// }).catch((err)=>{
//     console.log(err);
// })

// const schedule = require('node-schedule');
const moment = require('moment');
// const auto = schedule.scheduleJob('*/5 * * * *', ()=>{
//     console.log(moment().format("HH:mm:ss"));
// });
// const depTime = moment("2018-02-04 15:55:20"), now = moment();
// const blag = depTime.subtract(24, "hour").isBefore(now);
// console.log(blag);

// const order_recordDao = require('./dao/order_recordDao')
// order_recordDao.addRecord({order_record_type: '5', order_id: '2'});

// require('./service/rechargeService').querysingle({
//
// }).then((res)=>{
//
// })
// const now = moment();
// console.log(now.month(now.get('month') + 1).format("YYYY-MM-DD HH:mm:ss"));
// const obj = {
//     id: 1,
//     name: "张三",
//     age: 20,
//     size: 20,
//     length: 0,
// };
// const arr = ['id', 'name', 'age', 'size', 'length'];
//
// function checkNull(params, keys, checkNumber) {
//     if (!params) params = {};
//     if (!keys) keys = [];
//     // for (let p in params) {
//     for (let i = 0; i < keys.length; i++) {
//         const key = keys[i];
//         const value = params[key];
//         if (checkNumber && value !== 0 && !value) {
//             return {code: 4, msg: "参数不齐：" + key};
//         } else if (!value) {
//             return {code: 4, msg: "参数不齐：" + key};
//         }
//     }
//     return false;
//     // }
// }
//
// const check = checkNull(obj, arr);
// if (check) {
//     console.log(check);
// } else {
//     console.log("接口调用成功");
// }


// const wxbarcode = require('wxbarcode');
// const barcode = wxbarcode.barcode('barcode', '1234567890123456789', 680, 200);
// console.log(barcode);

// const str = new Buffer([60,104,116,109,108,62,13,10,32,32,32,32,60,104,101,97,100,62,13,10,32,32,32,32,32,32,32,32,60,116,105,116,108,101,62,82,117,110,116,105,109,101,32,69,114,114,111,114,60,47,116,105,116,108,101,62,13,10,32,32,32,32,32,32,32,32,60,115,116,121,108,101,62,13,10,32,32,32,32,32,32,32,32,32,98,111,100,121,32,123,102,111,110,116,45,102,97,109,105,108,121,58,34,86,101,114,100,97,110,97,34,59,102,111,110,116,45,119,101,105,103,104,116,58,110,111,114,109,97,108,59,102,111,110,116,45,115,105,122,101,58,32,46,55,101,109,59,99,111,108,111,114,58,98,108,97,99,107,59,125,32,13,10,32,32,32,32,32,32,32,32,32,112,32,123,102,111,110,116,45,102,97,109,105,108,121,58,34,86,101,114,100,97,110,97,34,59,102,111,110,116,45,119,101,105,103,104,116,58,110,111,114,109,97,108,59,99,111,108,111,114,58,98,108,97,99,107,59,109,97,114,103,105,110,45,116,111,112,58,32,45,53,112,120,125,13,10,32,32,32,32,32,32,32,32,32,98,32,123,102,111,110,116,45,102,97,109,105,108,121,58,34,86,101,114,100,97,110,97,34,59,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,99,111,108,111,114,58,98,108,97,99,107,59,109,97,114,103,105,110,45,116,111,112,58,32,45,53,112,120,125,13,10,32,32,32,32,32,32,32,32,32,72,49,32,123,32,102,111,110,116,45,102,97,109,105,108,121,58,34,86,101,114,100,97,110,97,34,59,102,111,110,116,45,119,101,105,103,104,116,58,110,111,114,109,97,108,59,102,111,110,116,45,115,105,122,101,58,49,56,112,116,59,99,111,108,111,114,58,114,101,100,32,125,13,10,32,32,32,32,32,32,32,32,32,72,50,32,123,32,102,111,110,116,45,102,97,109,105,108,121,58,34,86,101,114,100,97,110,97,34,59,102,111,110,116,45,119,101,105,103,104,116,58,110,111,114,109,97,108,59,102,111,110,116,45,115,105,122,101,58,49,52,112,116,59,99,111,108,111,114,58,109,97,114,111,111,110,32,125,13,10,32,32,32,32,32,32,32,32,32,112,114,101,32,123,102,111,110,116,45,102,97,109,105,108,121,58,34,76,117,99,105,100,97,32,67,111,110,115,111,108,101,34,59,102,111,110,116,45,115,105,122,101,58,32,46,57,101,109,125,13,10,32,32,32,32,32,32,32,32,32,46,109,97,114,107,101,114,32,123,102,111,110,116,45,119,101,105,103,104,116,58,32,98,111,108,100,59,32,99,111,108,111,114,58,32,98,108,97,99,107,59,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,110,111,110,101,59,125,13,10,32,32,32,32,32,32,32,32,32,46,118,101,114,115,105,111,110,32,123,99,111,108,111,114,58,32,103,114,97,121,59,125,13,10,32,32,32,32,32,32,32,32,32,46,101,114,114,111,114,32,123,109,97,114,103,105,110,45,98,111,116,116,111,109,58,32,49,48,112,120,59,125,13,10,32,32,32,32,32,32,32,32,32,46,101,120,112,97,110,100,97,98,108,101,32,123,32,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,117,110,100,101,114,108,105,110,101,59,32,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,32,99,111,108,111,114,58,110,97,118,121,59,32,99,117,114,115,111,114,58,104,97,110,100,59,32,125,13,10,32,32,32,32,32,32,32,32,60,47,115,116,121,108,101,62,13,10,32,32,32,32,60,47,104,101,97,100,62,13,10,13,10,32,32,32,32,60,98,111,100,121,32,98,103,99,111,108,111,114,61,34,119,104,105,116,101,34,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,115,112,97,110,62,60,72,49,62,83,101,114,118,101,114,32,69,114,114,111,114,32,105,110,32,39,47,39,32,65,112,112,108,105,99,97,116,105,111,110,46,60,104,114,32,119,105,100,116,104,61,49,48,48,37,32,115,105,122,101,61,49,32,99,111,108,111,114,61,115,105,108,118,101,114,62,60,47,72,49,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,104,50,62,32,60,105,62,82,117,110,116,105,109,101,32,69,114,114,111,114,60,47,105,62,32,60,47,104,50,62,60,47,115,112,97,110,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,102,111,110,116,32,102,97,99,101,61,34,65,114,105,97,108,44,32,72,101,108,118,101,116,105,99,97,44,32,71,101,110,101,118,97,44,32,83,117,110,83,97,110,115,45,82,101,103,117,108,97,114,44,32,115,97,110,115,45,115,101,114,105,102,32,34,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,62,32,68,101,115,99,114,105,112,116,105,111,110,58,32,60,47,98,62,65,110,32,97,112,112,108,105,99,97,116,105,111,110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,111,110,32,116,104,101,32,115,101,114,118,101,114,46,32,84,104,101,32,99,117,114,114,101,110,116,32,99,117,115,116,111,109,32,101,114,114,111,114,32,115,101,116,116,105,110,103,115,32,102,111,114,32,116,104,105,115,32,97,112,112,108,105,99,97,116,105,111,110,32,112,114,101,118,101,110,116,32,116,104,101,32,100,101,116,97,105,108,115,32,111,102,32,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,32,101,114,114,111,114,32,102,114,111,109,32,98,101,105,110,103,32,118,105,101,119,101,100,32,114,101,109,111,116,101,108,121,32,40,102,111,114,32,115,101,99,117,114,105,116,121,32,114,101,97,115,111,110,115,41,46,32,73,116,32,99,111,117,108,100,44,32,104,111,119,101,118,101,114,44,32,98,101,32,118,105,101,119,101,100,32,98,121,32,98,114,111,119,115,101,114,115,32,114,117,110,110,105,110,103,32,111,110,32,116,104,101,32,108,111,99,97,108,32,115,101,114,118,101,114,32,109,97,99,104,105,110,101,46,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,114,62,60,98,114,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,62,68,101,116,97,105,108,115,58,60,47,98,62,32,84,111,32,101,110,97,98,108,101,32,116,104,101,32,100,101,116,97,105,108,115,32,111,102,32,116,104,105,115,32,115,112,101,99,105,102,105,99,32,101,114,114,111,114,32,109,101,115,115,97,103,101,32,116,111,32,98,101,32,118,105,101,119,97,98,108,101,32,111,110,32,114,101,109,111,116,101,32,109,97,99,104,105,110,101,115,44,32,112,108,101,97,115,101,32,99,114,101,97,116,101,32,97,32,38,108,116,59,99,117,115,116,111,109,69,114,114,111,114,115,38,103,116,59,32,116,97,103,32,119,105,116,104,105,110,32,97,32,38,113,117,111,116,59,119,101,98,46,99,111,110,102,105,103,38,113,117,111,116,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,102,105,108,101,32,108,111,99,97,116,101,100,32,105,110,32,116,104,101,32,114,111,111,116,32,100,105,114,101,99,116,111,114,121,32,111,102,32,116,104,101,32,99,117,114,114,101,110,116,32,119,101,98,32,97,112,112,108,105,99,97,116,105,111,110,46,32,84,104,105,115,32,38,108,116,59,99,117,115,116,111,109,69,114,114,111,114,115,38,103,116,59,32,116,97,103,32,115,104,111,117,108,100,32,116,104,101,110,32,104,97,118,101,32,105,116,115,32,38,113,117,111,116,59,109,111,100,101,38,113,117,111,116,59,32,97,116,116,114,105,98,117,116,101,32,115,101,116,32,116,111,32,38,113,117,111,116,59,79,102,102,38,113,117,111,116,59,46,60,98,114,62,60,98,114,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,116,97,98,108,101,32,119,105,100,116,104,61,49,48,48,37,32,98,103,99,111,108,111,114,61,34,35,102,102,102,102,99,99,34,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,116,114,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,116,100,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,99,111,100,101,62,60,112,114,101,62,13,10,13,10,38,108,116,59,33,45,45,32,87,101,98,46,67,111,110,102,105,103,32,67,111,110,102,105,103,117,114,97,116,105,111,110,32,70,105,108,101,32,45,45,38,103,116,59,13,10,13,10,38,108,116,59,99,111,110,102,105,103,117,114,97,116,105,111,110,38,103,116,59,13,10,32,32,32,32,38,108,116,59,115,121,115,116,101,109,46,119,101,98,38,103,116,59,13,10,32,32,32,32,32,32,32,32,38,108,116,59,99,117,115,116,111,109,69,114,114,111,114,115,32,109,111,100,101,61,38,113,117,111,116,59,79,102,102,38,113,117,111,116,59,47,38,103,116,59,13,10,32,32,32,32,38,108,116,59,47,115,121,115,116,101,109,46,119,101,98,38,103,116,59,13,10,38,108,116,59,47,99,111,110,102,105,103,117,114,97,116,105,111,110,38,103,116,59,60,47,112,114,101,62,60,47,99,111,100,101,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,100,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,114,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,97,98,108,101,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,114,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,62,78,111,116,101,115,58,60,47,98,62,32,84,104,101,32,99,117,114,114,101,110,116,32,101,114,114,111,114,32,112,97,103,101,32,121,111,117,32,97,114,101,32,115,101,101,105,110,103,32,99,97,110,32,98,101,32,114,101,112,108,97,99,101,100,32,98,121,32,97,32,99,117,115,116,111,109,32,101,114,114,111,114,32,112,97,103,101,32,98,121,32,109,111,100,105,102,121,105,110,103,32,116,104,101,32,38,113,117,111,116,59,100,101,102,97,117,108,116,82,101,100,105,114,101,99,116,38,113,117,111,116,59,32,97,116,116,114,105,98,117,116,101,32,111,102,32,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,38,35,51,57,59,115,32,38,108,116,59,99,117,115,116,111,109,69,114,114,111,114,115,38,103,116,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,116,97,103,32,116,111,32,112,111,105,110,116,32,116,111,32,97,32,99,117,115,116,111,109,32,101,114,114,111,114,32,112,97,103,101,32,85,82,76,46,60,98,114,62,60,98,114,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,116,97,98,108,101,32,119,105,100,116,104,61,49,48,48,37,32,98,103,99,111,108,111,114,61,34,35,102,102,102,102,99,99,34,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,116,114,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,116,100,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,99,111,100,101,62,60,112,114,101,62,13,10,13,10,38,108,116,59,33,45,45,32,87,101,98,46,67,111,110,102,105,103,32,67,111,110,102,105,103,117,114,97,116,105,111,110,32,70,105,108,101,32,45,45,38,103,116,59,13,10,13,10,38,108,116,59,99,111,110,102,105,103,117,114,97,116,105,111,110,38,103,116,59,13,10,32,32,32,32,38,108,116,59,115,121,115,116,101,109,46,119,101,98,38,103,116,59,13,10,32,32,32,32,32,32,32,32,38,108,116,59,99,117,115,116,111,109,69,114,114,111,114,115,32,109,111,100,101,61,38,113,117,111,116,59,82,101,109,111,116,101,79,110,108,121,38,113,117,111,116,59,32,100,101,102,97,117,108,116,82,101,100,105,114,101,99,116,61,38,113,117,111,116,59,109,121,99,117,115,116,111,109,112,97,103,101,46,104,116,109,38,113,117,111,116,59,47,38,103,116,59,13,10,32,32,32,32,38,108,116,59,47,115,121,115,116,101,109,46,119,101,98,38,103,116,59,13,10,38,108,116,59,47,99,111,110,102,105,103,117,114,97,116,105,111,110,38,103,116,59,60,47,112,114,101,62,60,47,99,111,100,101,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,100,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,114,62,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,47,116,97,98,108,101,62,13,10,13,10,32,32,32,32,32,32,32,32,32,32,32,32,60,98,114,62,13,10,13,10,32,32,32,32,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10]);
// console.log(str.toString());